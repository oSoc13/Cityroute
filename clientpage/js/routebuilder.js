/*** @author Mathias Raets* @copyright OFKN Belgium */var spots = [];/**show the routebuilder using the spots[] variable*/function showRouteBuilder()  {    acquireSuggestedSpots(spots[0]);    $.each(spots, function (index, value) {                    $("#sortable").html($("#sortable").html() + "<li id='spot_" + value.link.params.id + "'>" + value.title + "</li>");                    });    $("#routes").hide();        /**    Form to add a name and description    */    $("#sortableInput").html("<table><tr><td>Route Name:</td> <td><input type='text' id='routeName' value='NewRoute1'/></td></tr>" +    "<tr><td> Route Description:</td> <td><input type='text' id='routeDescription' value='New Awesome Route'/></td></tr></table>" +     "<p><input type='button' onclick = 'addNewRoute()' value='Add this new route'/></p>");        $("#routeBuilder").show();};/*** @param spotID the ID of the first spot* sets a spot as startspot*/function routeBuilderSetFirstSpot(spotID){    var startSpot;    $.each(spots, function(index,value){        if(value.link.params.id == spotID)            startSpot = value;    });    spots = [];    spots.push(startSpot);};/*** find relevant matches for a location* @param spot the spot you want to find relevant matches for*/function acquireSuggestedSpots(spot){    var latitude = spot.meta_info.latitude;    var longitude = spot.meta_info.longitude;    var url =  "http://" + config_serverAddress + "/spots/relevant/?token=" + $.cookie("token") + "&latitude=" + latitude + "&longitude=" + longitude;        $.ajax({       type: 'GET',       crossDomain:true,        url: url,        cache: false,        success: onGetSuggestedSpots,        cache: false,        error: function(jqXHR, errorstatus, errorthrown) {           alert("Error: " + errorstatus);        }    });  };/*** find relevant matches for a location* @param latitude the latitude of the location* @param longitude the longitude of the location*/function acquireSuggestedSpotsByLatLong( latitude, longitude){    var url =  "http://" + config_serverAddress + "/spots/relevant/?token=" + $.cookie("token") + "&latitude=" + latitude + "&longitude=" + longitude;        $.ajax({       type: 'GET',       crossDomain:true,        url: url,        cache: false,        success: onGetSuggestedSpots,        cache: false,        error: function(jqXHR, errorstatus, errorthrown) {           alert("Error: " + errorstatus);        }    });  };/*** callback function ater acquiring a list of relevant spots*/function onGetSuggestedSpots(data, textStatus, jqXHR) {    data=JSON.parse(data);        // clear the suggestions list    $("#suggestions").html("");    $.each(data,function(index,value){        $("#suggestions").append("<li onclick='addSuggestedSpot(" + index + ")' id='suggestedSpot_" + value.link.params.id + "'>" + value.description + "</li>");                // add latlong data to the DOM elements (prevent requesting the spotinfo again)        $("#suggestedSpot_" + value.link.params.id).data('latlong',{latitude: value.meta_info.latitude, longitude: value.meta_info.longitude});    });};/*** add a suggested spot als next stop in the route* @param the position in the list of suggested spots*/function addSuggestedSpot( listID ) {    var listitems = document.getElementById("suggestions").getElementsByTagName("li");      var spotID = listitems[listID].id.split('_')[1] ;    var spotName = listitems[listID].innerHTML;    $("#sortable").append("<li id='spot_" + spotID + "'>" + spotName + "</li>");    var latlong = $("#" + listitems[listID].id).data("latlong");    acquireSuggestedSpotsByLatLong(latlong.latitude, latlong.longitude);};/**Add a spot for the routeBuilder*/function routeBuilderAddSpot( spot ){    spots.push(spot);};/**clear the routebuilder spots*/function routeBuilderClearSpots() {    spots.length = 0;     $("#sortable").html("");};/**add a new route to the database*/function addNewRoute() {    var items = document.getElementById("sortable").getElementsByTagName("li");         var points = [];    $.each(items, function (index, value) {                                if (index < 8 ){ // API allows max. 8 waypoints                                    var id = parseInt((value.id.split('_')[1]));                                    points.push({'item': id});                                                               }                            });        var newRoute = {                    name: $("#routeName").val(),                    description: $("#routeDescription").val(),                    points: points                     };    var url =  "http://" + config_serverAddress + "/routes/";    $.ajax({        type: "POST",        url: url,        data: (newRoute),        success: onRouteAdded,        dataType: "json"        });};/**callback function after adding a route*/function onRouteAdded(data, textStatus, jqXHR) {    selectRoute(data.id);    $("#routeBuilder").hide();    $("#sortableInput").html("");    $("#sortable").html("");    $("#suggestions").html("");    };